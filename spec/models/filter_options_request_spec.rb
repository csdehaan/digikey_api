=begin
#ProductSearch Api

#ProductSearch Api

OpenAPI spec version: v4
Contact: dl_Agile_Team_B2B_API@digikey.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.43

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for DigiKey::FilterOptionsRequest
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'FilterOptionsRequest' do
  before do
    # run before each test
    @instance = DigiKey::FilterOptionsRequest.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FilterOptionsRequest' do
    it 'should create an instance of FilterOptionsRequest' do
      expect(@instance).to be_instance_of(DigiKey::FilterOptionsRequest)
    end
  end
  describe 'test attribute "manufacturer_filter"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "category_filter"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "status_filter"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "packaging_filter"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "market_place_filter"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["NoFilter", "ExcludeMarketPlace", "MarketPlaceOnly"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.market_place_filter = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "series_filter"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "minimum_quantity_available"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "parameter_filter_request"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "search_options"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["ChipOutpost", "Has3DModel", "HasCadModel", "HasDatasheet", "HasProductPhoto", "InStock", "NewProduct", "NonRohsCompliant", "NormallyStocking", "RohsCompliant"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.search_options = value }.not_to raise_error
      # end
    end
  end

end
