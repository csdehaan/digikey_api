=begin
#ProductSearch Api

#ProductSearch Api

OpenAPI spec version: v4
Contact: dl_Agile_Team_B2B_API@digikey.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.43

=end

require 'uri'

module DigiKey
  class ProductSearchApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Retrieve Alternate Packaging for a given product
    # Works best with a Digi-Key Product number. Some manufacturer product numbers conflict with unrelated products and  may not  return the correct product.  Locale information is required in the headers for accurate pricing and currencies. Locale defaults to United  States.
    # @param product_number 
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @option opts [String] :x_digikey_customer_id Your Digi-Key Customer id. If your account has multiple Customer Ids for different regions, this allows you to select one of them.
    # @return [AlternatePackagingResponse]
    def alternate_packaging(product_number, x_digikey_client_id, opts = {})
      data, _status_code, _headers = alternate_packaging_with_http_info(product_number, x_digikey_client_id, opts)
      data
    end

    # Retrieve Alternate Packaging for a given product
    # Works best with a Digi-Key Product number. Some manufacturer product numbers conflict with unrelated products and  may not  return the correct product.  Locale information is required in the headers for accurate pricing and currencies. Locale defaults to United  States.
    # @param product_number 
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @option opts [String] :x_digikey_customer_id Your Digi-Key Customer id. If your account has multiple Customer Ids for different regions, this allows you to select one of them.
    # @return [Array<(AlternatePackagingResponse, Fixnum, Hash)>] AlternatePackagingResponse data, response status code and response headers
    def alternate_packaging_with_http_info(product_number, x_digikey_client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ProductSearchApi.alternate_packaging ...'
      end
      # verify the required parameter 'product_number' is set
      if @api_client.config.client_side_validation && product_number.nil?
        fail ArgumentError, "Missing the required parameter 'product_number' when calling ProductSearchApi.alternate_packaging"
      end
      # verify the required parameter 'x_digikey_client_id' is set
      if @api_client.config.client_side_validation && x_digikey_client_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_digikey_client_id' when calling ProductSearchApi.alternate_packaging"
      end
      # resource path
      local_var_path = '/search/{productNumber}/alternatepackaging'.sub('{' + 'productNumber' + '}', product_number.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-DIGIKEY-Client-Id'] = x_digikey_client_id
      header_params[:'Authorization'] = opts[:'authorization'] if !opts[:'authorization'].nil?
      header_params[:'X-DIGIKEY-Locale-Language'] = opts[:'x_digikey_locale_language'] if !opts[:'x_digikey_locale_language'].nil?
      header_params[:'X-DIGIKEY-Locale-Currency'] = opts[:'x_digikey_locale_currency'] if !opts[:'x_digikey_locale_currency'].nil?
      header_params[:'X-DIGIKEY-Locale-Site'] = opts[:'x_digikey_locale_site'] if !opts[:'x_digikey_locale_site'].nil?
      header_params[:'X-DIGIKEY-Customer-Id'] = opts[:'x_digikey_customer_id'] if !opts[:'x_digikey_customer_id'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeySecurity', 'oauth2ApplicationSecurity']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AlternatePackagingResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductSearchApi#alternate_packaging\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieve Associations for a given product
    # Works best with a Digi-Key Product number. Some manufacturer product numbers conflict with unrelated products and  may not  return the correct product.  Locale information is required in the headers for accurate pricing and currencies. Locale defaults to United  States.
    # @param product_number The product to retrieve substitutions for.
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @option opts [String] :x_digikey_customer_id Your Digi-Key Customer id. If your account has multiple Customer Ids for different regions, this allows you to select one of them.
    # @return [ProductAssociationsResponse]
    def associations(product_number, x_digikey_client_id, opts = {})
      data, _status_code, _headers = associations_with_http_info(product_number, x_digikey_client_id, opts)
      data
    end

    # Retrieve Associations for a given product
    # Works best with a Digi-Key Product number. Some manufacturer product numbers conflict with unrelated products and  may not  return the correct product.  Locale information is required in the headers for accurate pricing and currencies. Locale defaults to United  States.
    # @param product_number The product to retrieve substitutions for.
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @option opts [String] :x_digikey_customer_id Your Digi-Key Customer id. If your account has multiple Customer Ids for different regions, this allows you to select one of them.
    # @return [Array<(ProductAssociationsResponse, Fixnum, Hash)>] ProductAssociationsResponse data, response status code and response headers
    def associations_with_http_info(product_number, x_digikey_client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ProductSearchApi.associations ...'
      end
      # verify the required parameter 'product_number' is set
      if @api_client.config.client_side_validation && product_number.nil?
        fail ArgumentError, "Missing the required parameter 'product_number' when calling ProductSearchApi.associations"
      end
      # verify the required parameter 'x_digikey_client_id' is set
      if @api_client.config.client_side_validation && x_digikey_client_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_digikey_client_id' when calling ProductSearchApi.associations"
      end
      # resource path
      local_var_path = '/search/{productNumber}/associations'.sub('{' + 'productNumber' + '}', product_number.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-DIGIKEY-Client-Id'] = x_digikey_client_id
      header_params[:'Authorization'] = opts[:'authorization'] if !opts[:'authorization'].nil?
      header_params[:'X-DIGIKEY-Locale-Language'] = opts[:'x_digikey_locale_language'] if !opts[:'x_digikey_locale_language'].nil?
      header_params[:'X-DIGIKEY-Locale-Currency'] = opts[:'x_digikey_locale_currency'] if !opts[:'x_digikey_locale_currency'].nil?
      header_params[:'X-DIGIKEY-Locale-Site'] = opts[:'x_digikey_locale_site'] if !opts[:'x_digikey_locale_site'].nil?
      header_params[:'X-DIGIKEY-Customer-Id'] = opts[:'x_digikey_customer_id'] if !opts[:'x_digikey_customer_id'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeySecurity', 'oauth2ApplicationSecurity']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ProductAssociationsResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductSearchApi#associations\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Returns all Product Categories. Category Id can be used in KeywordRequestDto.Filters.TaxonomyIds to restrict a  keyword search to a given category
    # @param [Hash] opts the optional parameters
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @return [CategoriesResponse]
    def categories(opts = {})
      data, _status_code, _headers = categories_with_http_info(opts)
      data
    end

    # Returns all Product Categories. Category Id can be used in KeywordRequestDto.Filters.TaxonomyIds to restrict a  keyword search to a given category
    # @param [Hash] opts the optional parameters
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @return [Array<(CategoriesResponse, Fixnum, Hash)>] CategoriesResponse data, response status code and response headers
    def categories_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ProductSearchApi.categories ...'
      end
      # resource path
      local_var_path = '/search/categories'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = opts[:'authorization'] if !opts[:'authorization'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeySecurity', 'oauth2ApplicationSecurity']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CategoriesResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductSearchApi#categories\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Returns Category for given Id. Category Id can be used in KeywordRequestDto.Filters.TaxonomyIds to restrict a  keyword search to a given category
    # @param category_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @return [CategoryResponse]
    def categories_by_id(category_id, opts = {})
      data, _status_code, _headers = categories_by_id_with_http_info(category_id, opts)
      data
    end

    # Returns Category for given Id. Category Id can be used in KeywordRequestDto.Filters.TaxonomyIds to restrict a  keyword search to a given category
    # @param category_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @return [Array<(CategoryResponse, Fixnum, Hash)>] CategoryResponse data, response status code and response headers
    def categories_by_id_with_http_info(category_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ProductSearchApi.categories_by_id ...'
      end
      # verify the required parameter 'category_id' is set
      if @api_client.config.client_side_validation && category_id.nil?
        fail ArgumentError, "Missing the required parameter 'category_id' when calling ProductSearchApi.categories_by_id"
      end
      # resource path
      local_var_path = '/search/categories/{categoryId}'.sub('{' + 'categoryId' + '}', category_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Authorization'] = opts[:'authorization'] if !opts[:'authorization'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeySecurity', 'oauth2ApplicationSecurity']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CategoryResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductSearchApi#categories_by_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Calculate the DigiReel pricing for the given DigiKeyProductNumber and RequestedQuantity
    # @param product_number The Digi-Key ProductNumber requested for Digi-Reel price calculation. It must be a  Digi-Key Product number that is for a Digi-Reel pack type.
    # @param requested_quantity The quantity of the product you are looking to create a Digi-Reel with. Must be greater  than 0.
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @option opts [String] :x_digikey_customer_id Your Digi-Key Customer id. If your account has multiple Customer Ids for different regions, this allows you to select one of them.
    # @return [DigiReelPricing]
    def digi_reel_pricing(product_number, requested_quantity, x_digikey_client_id, opts = {})
      data, _status_code, _headers = digi_reel_pricing_with_http_info(product_number, requested_quantity, x_digikey_client_id, opts)
      data
    end

    # Calculate the DigiReel pricing for the given DigiKeyProductNumber and RequestedQuantity
    # @param product_number The Digi-Key ProductNumber requested for Digi-Reel price calculation. It must be a  Digi-Key Product number that is for a Digi-Reel pack type.
    # @param requested_quantity The quantity of the product you are looking to create a Digi-Reel with. Must be greater  than 0.
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @option opts [String] :x_digikey_customer_id Your Digi-Key Customer id. If your account has multiple Customer Ids for different regions, this allows you to select one of them.
    # @return [Array<(DigiReelPricing, Fixnum, Hash)>] DigiReelPricing data, response status code and response headers
    def digi_reel_pricing_with_http_info(product_number, requested_quantity, x_digikey_client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ProductSearchApi.digi_reel_pricing ...'
      end
      # verify the required parameter 'product_number' is set
      if @api_client.config.client_side_validation && product_number.nil?
        fail ArgumentError, "Missing the required parameter 'product_number' when calling ProductSearchApi.digi_reel_pricing"
      end
      # verify the required parameter 'requested_quantity' is set
      if @api_client.config.client_side_validation && requested_quantity.nil?
        fail ArgumentError, "Missing the required parameter 'requested_quantity' when calling ProductSearchApi.digi_reel_pricing"
      end
      # verify the required parameter 'x_digikey_client_id' is set
      if @api_client.config.client_side_validation && x_digikey_client_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_digikey_client_id' when calling ProductSearchApi.digi_reel_pricing"
      end
      # resource path
      local_var_path = '/search/{productNumber}/digireelpricing'.sub('{' + 'productNumber' + '}', product_number.to_s)

      # query parameters
      query_params = {}
      query_params[:'requestedQuantity'] = requested_quantity

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-DIGIKEY-Client-Id'] = x_digikey_client_id
      header_params[:'Authorization'] = opts[:'authorization'] if !opts[:'authorization'].nil?
      header_params[:'X-DIGIKEY-Locale-Language'] = opts[:'x_digikey_locale_language'] if !opts[:'x_digikey_locale_language'].nil?
      header_params[:'X-DIGIKEY-Locale-Currency'] = opts[:'x_digikey_locale_currency'] if !opts[:'x_digikey_locale_currency'].nil?
      header_params[:'X-DIGIKEY-Locale-Site'] = opts[:'x_digikey_locale_site'] if !opts[:'x_digikey_locale_site'].nil?
      header_params[:'X-DIGIKEY-Customer-Id'] = opts[:'x_digikey_customer_id'] if !opts[:'x_digikey_customer_id'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeySecurity', 'oauth2ApplicationSecurity']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DigiReelPricing')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductSearchApi#digi_reel_pricing\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Enter parameters, keywords, or a manufacturer part number/DigiKey part number and receive many fields of product information for each match. Note that MyPricing is not returned.
    # Search for product information based on part number, description, manufacturer, or category. This new API supports two-legged and three-legged OAuth authentication.   [all endpoints for https://developer.digikey.com/products/product-information-v4/productsearch]    While the MyPricing field is included in the KeywordSearch response, it will not be populated. Only StandardPricing will be included.  Please use the ProductDetails or ProductPricing endpoints to receive MyPricing
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :includes 
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @option opts [String] :x_digikey_customer_id Your Digi-Key Customer id. If your account has multiple Customer Ids for different regions, this allows you to select one of them.
    # @option opts [KeywordRequest] :body 
    # @return [KeywordResponse]
    def keyword_search(x_digikey_client_id, opts = {})
      data, _status_code, _headers = keyword_search_with_http_info(x_digikey_client_id, opts)
      data
    end

    # Enter parameters, keywords, or a manufacturer part number/DigiKey part number and receive many fields of product information for each match. Note that MyPricing is not returned.
    # Search for product information based on part number, description, manufacturer, or category. This new API supports two-legged and three-legged OAuth authentication.   [all endpoints for https://developer.digikey.com/products/product-information-v4/productsearch]    While the MyPricing field is included in the KeywordSearch response, it will not be populated. Only StandardPricing will be included.  Please use the ProductDetails or ProductPricing endpoints to receive MyPricing
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :includes 
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @option opts [String] :x_digikey_customer_id Your Digi-Key Customer id. If your account has multiple Customer Ids for different regions, this allows you to select one of them.
    # @option opts [KeywordRequest] :body 
    # @return [Array<(KeywordResponse, Fixnum, Hash)>] KeywordResponse data, response status code and response headers
    def keyword_search_with_http_info(x_digikey_client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ProductSearchApi.keyword_search ...'
      end
      # verify the required parameter 'x_digikey_client_id' is set
      if @api_client.config.client_side_validation && x_digikey_client_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_digikey_client_id' when calling ProductSearchApi.keyword_search"
      end
      # resource path
      local_var_path = '/search/keyword'

      # query parameters
      query_params = {}
      query_params[:'includes'] = opts[:'includes'] if !opts[:'includes'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'X-DIGIKEY-Client-Id'] = x_digikey_client_id
      header_params[:'Authorization'] = opts[:'authorization'] if !opts[:'authorization'].nil?
      header_params[:'X-DIGIKEY-Locale-Language'] = opts[:'x_digikey_locale_language'] if !opts[:'x_digikey_locale_language'].nil?
      header_params[:'X-DIGIKEY-Locale-Currency'] = opts[:'x_digikey_locale_currency'] if !opts[:'x_digikey_locale_currency'].nil?
      header_params[:'X-DIGIKEY-Locale-Site'] = opts[:'x_digikey_locale_site'] if !opts[:'x_digikey_locale_site'].nil?
      header_params[:'X-DIGIKEY-Customer-Id'] = opts[:'x_digikey_customer_id'] if !opts[:'x_digikey_customer_id'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['apiKeySecurity', 'oauth2ApplicationSecurity']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'KeywordResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductSearchApi#keyword_search\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Returns all Product Manufacturers. ManufacturersId can be used in KeywordRequestDto.Filters.ManufacturerIds to  restrict a keyword search to a given Manufacturer
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @return [ManufacturersResponse]
    def manufacturers(x_digikey_client_id, opts = {})
      data, _status_code, _headers = manufacturers_with_http_info(x_digikey_client_id, opts)
      data
    end

    # Returns all Product Manufacturers. ManufacturersId can be used in KeywordRequestDto.Filters.ManufacturerIds to  restrict a keyword search to a given Manufacturer
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @return [Array<(ManufacturersResponse, Fixnum, Hash)>] ManufacturersResponse data, response status code and response headers
    def manufacturers_with_http_info(x_digikey_client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ProductSearchApi.manufacturers ...'
      end
      # verify the required parameter 'x_digikey_client_id' is set
      if @api_client.config.client_side_validation && x_digikey_client_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_digikey_client_id' when calling ProductSearchApi.manufacturers"
      end
      # resource path
      local_var_path = '/search/manufacturers'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-DIGIKEY-Client-Id'] = x_digikey_client_id
      header_params[:'Authorization'] = opts[:'authorization'] if !opts[:'authorization'].nil?
      header_params[:'X-DIGIKEY-Locale-Language'] = opts[:'x_digikey_locale_language'] if !opts[:'x_digikey_locale_language'].nil?
      header_params[:'X-DIGIKEY-Locale-Currency'] = opts[:'x_digikey_locale_currency'] if !opts[:'x_digikey_locale_currency'].nil?
      header_params[:'X-DIGIKEY-Locale-Site'] = opts[:'x_digikey_locale_site'] if !opts[:'x_digikey_locale_site'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeySecurity', 'oauth2ApplicationSecurity']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ManufacturersResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductSearchApi#manufacturers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieve all media for a given product
    # @param product_number 
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @option opts [String] :x_digikey_customer_id Your Digi-Key Customer id. If your account has multiple Customer Ids for different regions, this allows you to select one of them.
    # @return [MediaResponse]
    def media(product_number, x_digikey_client_id, opts = {})
      data, _status_code, _headers = media_with_http_info(product_number, x_digikey_client_id, opts)
      data
    end

    # Retrieve all media for a given product
    # @param product_number 
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @option opts [String] :x_digikey_customer_id Your Digi-Key Customer id. If your account has multiple Customer Ids for different regions, this allows you to select one of them.
    # @return [Array<(MediaResponse, Fixnum, Hash)>] MediaResponse data, response status code and response headers
    def media_with_http_info(product_number, x_digikey_client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ProductSearchApi.media ...'
      end
      # verify the required parameter 'product_number' is set
      if @api_client.config.client_side_validation && product_number.nil?
        fail ArgumentError, "Missing the required parameter 'product_number' when calling ProductSearchApi.media"
      end
      # verify the required parameter 'x_digikey_client_id' is set
      if @api_client.config.client_side_validation && x_digikey_client_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_digikey_client_id' when calling ProductSearchApi.media"
      end
      # resource path
      local_var_path = '/search/{productNumber}/media'.sub('{' + 'productNumber' + '}', product_number.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-DIGIKEY-Client-Id'] = x_digikey_client_id
      header_params[:'Authorization'] = opts[:'authorization'] if !opts[:'authorization'].nil?
      header_params[:'X-DIGIKEY-Locale-Language'] = opts[:'x_digikey_locale_language'] if !opts[:'x_digikey_locale_language'].nil?
      header_params[:'X-DIGIKEY-Locale-Currency'] = opts[:'x_digikey_locale_currency'] if !opts[:'x_digikey_locale_currency'].nil?
      header_params[:'X-DIGIKEY-Locale-Site'] = opts[:'x_digikey_locale_site'] if !opts[:'x_digikey_locale_site'].nil?
      header_params[:'X-DIGIKEY-Customer-Id'] = opts[:'x_digikey_customer_id'] if !opts[:'x_digikey_customer_id'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeySecurity', 'oauth2ApplicationSecurity']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'MediaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductSearchApi#media\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Provide a product number and quantity to receive product information such as pricing, available quantity, and the  best  packaging type for the requested quantity of the product.  For example, given a requested quantity larger than a standard reel, this will return information about the  standard tape and reel as well as either cut tape or DKR depending on the provided preference.  Made for Cut Tape, Tape and Reel, and Digi-Reel products only. Other packaging types can be searched for, but  results may vary.  Locale information is required in the headers for accurate pricing and currencies. Locale defaults to United  States.
    # @param product_number A product number. Can be either Digi-Key or Manufacturer, but some manufacturer product  numbers are ambiguous and will not be found. A DKR product number will override a CT packagingPreference.
    # @param requested_quantity The quantity of the product that you are interested in. This will be used to determine  the quantity to purchase in standard tape and reel, and also in your product preference for the remainder.
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :packaging_preference Can be either \&quot;CT\&quot; for Cut Tape or \&quot;DKR\&quot; for Digi-Reel. This will select what package  type to use for the remainder of quantity outside a standard reel. (default to )
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @option opts [String] :x_digikey_customer_id Your Digi-Key Customer id. If your account has multiple Customer Ids for different regions, this allows you to select one of them.
    # @return [PackageTypeByQuantityResponse]
    def package_type_by_quantity(product_number, requested_quantity, x_digikey_client_id, opts = {})
      data, _status_code, _headers = package_type_by_quantity_with_http_info(product_number, requested_quantity, x_digikey_client_id, opts)
      data
    end

    # Provide a product number and quantity to receive product information such as pricing, available quantity, and the  best  packaging type for the requested quantity of the product.  For example, given a requested quantity larger than a standard reel, this will return information about the  standard tape and reel as well as either cut tape or DKR depending on the provided preference.  Made for Cut Tape, Tape and Reel, and Digi-Reel products only. Other packaging types can be searched for, but  results may vary.  Locale information is required in the headers for accurate pricing and currencies. Locale defaults to United  States.
    # @param product_number A product number. Can be either Digi-Key or Manufacturer, but some manufacturer product  numbers are ambiguous and will not be found. A DKR product number will override a CT packagingPreference.
    # @param requested_quantity The quantity of the product that you are interested in. This will be used to determine  the quantity to purchase in standard tape and reel, and also in your product preference for the remainder.
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :packaging_preference Can be either \&quot;CT\&quot; for Cut Tape or \&quot;DKR\&quot; for Digi-Reel. This will select what package  type to use for the remainder of quantity outside a standard reel.
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @option opts [String] :x_digikey_customer_id Your Digi-Key Customer id. If your account has multiple Customer Ids for different regions, this allows you to select one of them.
    # @return [Array<(PackageTypeByQuantityResponse, Fixnum, Hash)>] PackageTypeByQuantityResponse data, response status code and response headers
    def package_type_by_quantity_with_http_info(product_number, requested_quantity, x_digikey_client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ProductSearchApi.package_type_by_quantity ...'
      end
      # verify the required parameter 'product_number' is set
      if @api_client.config.client_side_validation && product_number.nil?
        fail ArgumentError, "Missing the required parameter 'product_number' when calling ProductSearchApi.package_type_by_quantity"
      end
      # verify the required parameter 'requested_quantity' is set
      if @api_client.config.client_side_validation && requested_quantity.nil?
        fail ArgumentError, "Missing the required parameter 'requested_quantity' when calling ProductSearchApi.package_type_by_quantity"
      end
      # verify the required parameter 'x_digikey_client_id' is set
      if @api_client.config.client_side_validation && x_digikey_client_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_digikey_client_id' when calling ProductSearchApi.package_type_by_quantity"
      end
      # resource path
      local_var_path = '/search/packagetypebyquantity/{productNumber}'.sub('{' + 'productNumber' + '}', product_number.to_s)

      # query parameters
      query_params = {}
      query_params[:'requestedQuantity'] = requested_quantity
      query_params[:'packagingPreference'] = opts[:'packaging_preference'] if !opts[:'packaging_preference'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-DIGIKEY-Client-Id'] = x_digikey_client_id
      header_params[:'Authorization'] = opts[:'authorization'] if !opts[:'authorization'].nil?
      header_params[:'X-DIGIKEY-Locale-Language'] = opts[:'x_digikey_locale_language'] if !opts[:'x_digikey_locale_language'].nil?
      header_params[:'X-DIGIKEY-Locale-Currency'] = opts[:'x_digikey_locale_currency'] if !opts[:'x_digikey_locale_currency'].nil?
      header_params[:'X-DIGIKEY-Locale-Site'] = opts[:'x_digikey_locale_site'] if !opts[:'x_digikey_locale_site'].nil?
      header_params[:'X-DIGIKEY-Customer-Id'] = opts[:'x_digikey_customer_id'] if !opts[:'x_digikey_customer_id'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeySecurity', 'oauth2ApplicationSecurity']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PackageTypeByQuantityResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductSearchApi#package_type_by_quantity\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Enter a manufacturer part number/DigiKey part number and receive all of the production information fields for a single-matched product. MyPricing is shown if applicable.  If the manufacturer part number has more than one match, we will respond with an error.
    # Works best with a Digi-Key product number. MyPricing is shown if applicable.  Locale information is required in the headers for accurate pricing and currencies. Locale and currencies will be set to default values if not populated or populated with invalid values. Check the “Settings Used” fields to see which values we used for the response.
    # @param product_number The product to retrieve details for.
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :includes 
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @option opts [String] :x_digikey_customer_id Your Digi-Key Customer id. If your account has multiple Customer Ids for different regions, this allows you to select one of them.
    # @return [ProductDetails]
    def product_details(product_number, x_digikey_client_id, opts = {})
      data, _status_code, _headers = product_details_with_http_info(product_number, x_digikey_client_id, opts)
      data
    end

    # Enter a manufacturer part number/DigiKey part number and receive all of the production information fields for a single-matched product. MyPricing is shown if applicable.  If the manufacturer part number has more than one match, we will respond with an error.
    # Works best with a Digi-Key product number. MyPricing is shown if applicable.  Locale information is required in the headers for accurate pricing and currencies. Locale and currencies will be set to default values if not populated or populated with invalid values. Check the “Settings Used” fields to see which values we used for the response.
    # @param product_number The product to retrieve details for.
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :includes 
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @option opts [String] :x_digikey_customer_id Your Digi-Key Customer id. If your account has multiple Customer Ids for different regions, this allows you to select one of them.
    # @return [Array<(ProductDetails, Fixnum, Hash)>] ProductDetails data, response status code and response headers
    def product_details_with_http_info(product_number, x_digikey_client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ProductSearchApi.product_details ...'
      end
      # verify the required parameter 'product_number' is set
      if @api_client.config.client_side_validation && product_number.nil?
        fail ArgumentError, "Missing the required parameter 'product_number' when calling ProductSearchApi.product_details"
      end
      # verify the required parameter 'x_digikey_client_id' is set
      if @api_client.config.client_side_validation && x_digikey_client_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_digikey_client_id' when calling ProductSearchApi.product_details"
      end
      # resource path
      local_var_path = '/search/{productNumber}/productdetails'.sub('{' + 'productNumber' + '}', product_number.to_s)

      # query parameters
      query_params = {}
      query_params[:'includes'] = opts[:'includes'] if !opts[:'includes'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-DIGIKEY-Client-Id'] = x_digikey_client_id
      header_params[:'Authorization'] = opts[:'authorization'] if !opts[:'authorization'].nil?
      header_params[:'X-DIGIKEY-Locale-Language'] = opts[:'x_digikey_locale_language'] if !opts[:'x_digikey_locale_language'].nil?
      header_params[:'X-DIGIKEY-Locale-Currency'] = opts[:'x_digikey_locale_currency'] if !opts[:'x_digikey_locale_currency'].nil?
      header_params[:'X-DIGIKEY-Locale-Site'] = opts[:'x_digikey_locale_site'] if !opts[:'x_digikey_locale_site'].nil?
      header_params[:'X-DIGIKEY-Customer-Id'] = opts[:'x_digikey_customer_id'] if !opts[:'x_digikey_customer_id'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeySecurity', 'oauth2ApplicationSecurity']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ProductDetails')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductSearchApi#product_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Enter a manufacturer part number/DigiKey part number or partial manufacturer part number/DigiKey part number and receive product information fields for each matched product. MyPricing is shown if applicable.
    # Allows you to use inStock and excludeMarketplace as limit. If there are multiple matching parts, you can see the additional ones by incrementing your input using the offset and limit fields. Locale information is required in the headers for accurate pricing and currencies. Locale and currencies will be set to default values if not populated or populated with invalid values. Check the “Settings Used” fields to see which values we used for the response.
    # @param product_number ProducuctNubmer to search on. Can be partial part number, manufacturer part number, or a Digi-Key part number. Enter the ProductNumber to be searched. You can enter a manufacturer part number or a DigiKey part number. You can enter a partial or complete product number. The search results are better when entering a DigiKey product number, as some manufacturers share the same manufacturer part number.
    # @param x_digikey_client_id The Client Id for your App. Enter the ClientID for the Product App used to make the call.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :limit Enter the maximum number of products to be returned. The maximum amount is 10. Default value: 5 (default to 5)
    # @option opts [Integer] :offset Enter the starting index for the records to be returned. This is used when making subsequent calls for the same ProductNumber. Default value: 0 (default to 0)
    # @option opts [BOOLEAN] :in_stock Enter true to exclude products that are not in stock. Default value : false (default to false)
    # @option opts [BOOLEAN] :exclude_marketplace Enter true to exclude Marketplace items and limit results to those fulfilled by DigiKey. Default value: false (default to false)
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_site This value determines which country’s prices are used for StandardPricing and MyPricing. Also, product restrictions can differ by country. Acceptable values include: AT, AU, BE, BG, BR, CA, CH, CN, CZ, DE, DK, EE, ES, FI, FR, GR, HK, HU, IE, IL, IN, IT, JP, KR, LT, LU, LV, MX, MY, NL, NO, NZ, PH, PL, PT, RO, SE, SG, SI, SK, TH, TW, UK, US, ZA Default value: US
    # @option opts [String] :x_digikey_locale_language This value determines which language is used for the links in reply. If the entered language is not valid for the entered Locale-Site, it will default to English. Acceptable values include: CS, DA, DE, EN, ES, FI, FR, HE, HU, IT, JA, KO, NL, NO, PL, PT, RO, SV, TH, ZHS, ZHT Default value: English
    # @option opts [String] :x_digikey_locale_currency This value determines which country’s prices are used for StandardPricing and MyPricing. If the value is not allowed for the entered Locale-Site, it defaults to the primary currency for that Locale-Site. Ex: If Locale-Currency &#x3D; EUR and Locale-Site &#x3D; US, then the system will default to USD and note that in the response. Acceptable values include: AUD, CAD, CHF, CNY, CZK, DKK, EUR, GBP, HKD, HUF, ILS, INR, JPY, KRW, MYR, NOK, NZD, PHP, PLN, RON, SEK, SGD, THB, TWD, USD, ZAR Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_customer_id This value determines if MyPricing, if available, will be returned and which region’s pricing agreement will be used. MyPricing is set for the country of the CustomerID’s physical location. The CustomerID must have a myDIGIKEY registration tied to that location.
    # @return [ProductPricingResponse]
    def product_pricing(product_number, x_digikey_client_id, opts = {})
      data, _status_code, _headers = product_pricing_with_http_info(product_number, x_digikey_client_id, opts)
      data
    end

    # Enter a manufacturer part number/DigiKey part number or partial manufacturer part number/DigiKey part number and receive product information fields for each matched product. MyPricing is shown if applicable.
    # Allows you to use inStock and excludeMarketplace as limit. If there are multiple matching parts, you can see the additional ones by incrementing your input using the offset and limit fields. Locale information is required in the headers for accurate pricing and currencies. Locale and currencies will be set to default values if not populated or populated with invalid values. Check the “Settings Used” fields to see which values we used for the response.
    # @param product_number ProducuctNubmer to search on. Can be partial part number, manufacturer part number, or a Digi-Key part number. Enter the ProductNumber to be searched. You can enter a manufacturer part number or a DigiKey part number. You can enter a partial or complete product number. The search results are better when entering a DigiKey product number, as some manufacturers share the same manufacturer part number.
    # @param x_digikey_client_id The Client Id for your App. Enter the ClientID for the Product App used to make the call.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :limit Enter the maximum number of products to be returned. The maximum amount is 10. Default value: 5
    # @option opts [Integer] :offset Enter the starting index for the records to be returned. This is used when making subsequent calls for the same ProductNumber. Default value: 0
    # @option opts [BOOLEAN] :in_stock Enter true to exclude products that are not in stock. Default value : false
    # @option opts [BOOLEAN] :exclude_marketplace Enter true to exclude Marketplace items and limit results to those fulfilled by DigiKey. Default value: false
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_site This value determines which country’s prices are used for StandardPricing and MyPricing. Also, product restrictions can differ by country. Acceptable values include: AT, AU, BE, BG, BR, CA, CH, CN, CZ, DE, DK, EE, ES, FI, FR, GR, HK, HU, IE, IL, IN, IT, JP, KR, LT, LU, LV, MX, MY, NL, NO, NZ, PH, PL, PT, RO, SE, SG, SI, SK, TH, TW, UK, US, ZA Default value: US
    # @option opts [String] :x_digikey_locale_language This value determines which language is used for the links in reply. If the entered language is not valid for the entered Locale-Site, it will default to English. Acceptable values include: CS, DA, DE, EN, ES, FI, FR, HE, HU, IT, JA, KO, NL, NO, PL, PT, RO, SV, TH, ZHS, ZHT Default value: English
    # @option opts [String] :x_digikey_locale_currency This value determines which country’s prices are used for StandardPricing and MyPricing. If the value is not allowed for the entered Locale-Site, it defaults to the primary currency for that Locale-Site. Ex: If Locale-Currency &#x3D; EUR and Locale-Site &#x3D; US, then the system will default to USD and note that in the response. Acceptable values include: AUD, CAD, CHF, CNY, CZK, DKK, EUR, GBP, HKD, HUF, ILS, INR, JPY, KRW, MYR, NOK, NZD, PHP, PLN, RON, SEK, SGD, THB, TWD, USD, ZAR Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_customer_id This value determines if MyPricing, if available, will be returned and which region’s pricing agreement will be used. MyPricing is set for the country of the CustomerID’s physical location. The CustomerID must have a myDIGIKEY registration tied to that location.
    # @return [Array<(ProductPricingResponse, Fixnum, Hash)>] ProductPricingResponse data, response status code and response headers
    def product_pricing_with_http_info(product_number, x_digikey_client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ProductSearchApi.product_pricing ...'
      end
      # verify the required parameter 'product_number' is set
      if @api_client.config.client_side_validation && product_number.nil?
        fail ArgumentError, "Missing the required parameter 'product_number' when calling ProductSearchApi.product_pricing"
      end
      # verify the required parameter 'x_digikey_client_id' is set
      if @api_client.config.client_side_validation && x_digikey_client_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_digikey_client_id' when calling ProductSearchApi.product_pricing"
      end
      # resource path
      local_var_path = '/search/{productNumber}/pricing'.sub('{' + 'productNumber' + '}', product_number.to_s)

      # query parameters
      query_params = {}
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'inStock'] = opts[:'in_stock'] if !opts[:'in_stock'].nil?
      query_params[:'excludeMarketplace'] = opts[:'exclude_marketplace'] if !opts[:'exclude_marketplace'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-DIGIKEY-Client-Id'] = x_digikey_client_id
      header_params[:'Authorization'] = opts[:'authorization'] if !opts[:'authorization'].nil?
      header_params[:'X-DIGIKEY-Locale-Site'] = opts[:'x_digikey_locale_site'] if !opts[:'x_digikey_locale_site'].nil?
      header_params[:'X-DIGIKEY-Locale-Language'] = opts[:'x_digikey_locale_language'] if !opts[:'x_digikey_locale_language'].nil?
      header_params[:'X-DIGIKEY-Locale-Currency'] = opts[:'x_digikey_locale_currency'] if !opts[:'x_digikey_locale_currency'].nil?
      header_params[:'X-DIGIKEY-Customer-Id'] = opts[:'x_digikey_customer_id'] if !opts[:'x_digikey_customer_id'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeySecurity', 'oauth2ApplicationSecurity']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ProductPricingResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductSearchApi#product_pricing\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Returns a list of recommended products for the given Product number.
    # @param product_number The Product being searched for
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :limit The number of records to be returned (default to 1)
    # @option opts [String] :search_option_list A comma delimited list of filters that can be used to limit results. Available filters  are the following: LeadFree, CollapsePackingTypes, ExcludeNonStock, Has3DModel, InStock, ManufacturerPartSearch,  NewProductsOnly, RoHSCompliant.
    # @option opts [BOOLEAN] :exclude_market_place_products Used to exclude MarkPlace products from search results. Default is false (default to false)
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @return [RecommendedProductsResponse]
    def recommended_products(product_number, x_digikey_client_id, opts = {})
      data, _status_code, _headers = recommended_products_with_http_info(product_number, x_digikey_client_id, opts)
      data
    end

    # Returns a list of recommended products for the given Product number.
    # @param product_number The Product being searched for
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :limit The number of records to be returned
    # @option opts [String] :search_option_list A comma delimited list of filters that can be used to limit results. Available filters  are the following: LeadFree, CollapsePackingTypes, ExcludeNonStock, Has3DModel, InStock, ManufacturerPartSearch,  NewProductsOnly, RoHSCompliant.
    # @option opts [BOOLEAN] :exclude_market_place_products Used to exclude MarkPlace products from search results. Default is false
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @return [Array<(RecommendedProductsResponse, Fixnum, Hash)>] RecommendedProductsResponse data, response status code and response headers
    def recommended_products_with_http_info(product_number, x_digikey_client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ProductSearchApi.recommended_products ...'
      end
      # verify the required parameter 'product_number' is set
      if @api_client.config.client_side_validation && product_number.nil?
        fail ArgumentError, "Missing the required parameter 'product_number' when calling ProductSearchApi.recommended_products"
      end
      # verify the required parameter 'x_digikey_client_id' is set
      if @api_client.config.client_side_validation && x_digikey_client_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_digikey_client_id' when calling ProductSearchApi.recommended_products"
      end
      # resource path
      local_var_path = '/search/{productNumber}/recommendedproducts'.sub('{' + 'productNumber' + '}', product_number.to_s)

      # query parameters
      query_params = {}
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'searchOptionList'] = opts[:'search_option_list'] if !opts[:'search_option_list'].nil?
      query_params[:'excludeMarketPlaceProducts'] = opts[:'exclude_market_place_products'] if !opts[:'exclude_market_place_products'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-DIGIKEY-Client-Id'] = x_digikey_client_id
      header_params[:'Authorization'] = opts[:'authorization'] if !opts[:'authorization'].nil?
      header_params[:'X-DIGIKEY-Locale-Language'] = opts[:'x_digikey_locale_language'] if !opts[:'x_digikey_locale_language'].nil?
      header_params[:'X-DIGIKEY-Locale-Currency'] = opts[:'x_digikey_locale_currency'] if !opts[:'x_digikey_locale_currency'].nil?
      header_params[:'X-DIGIKEY-Locale-Site'] = opts[:'x_digikey_locale_site'] if !opts[:'x_digikey_locale_site'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeySecurity', 'oauth2ApplicationSecurity']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RecommendedProductsResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductSearchApi#recommended_products\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieve Substitutions for a given product
    # Works best with a Digi-Key Product number. Some manufacturer product numbers conflict with unrelated products and  may not  return the correct product.  Locale information is required in the headers for accurate pricing and currencies. Locale defaults to United  States.
    # @param product_number 
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :includes 
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @option opts [String] :x_digikey_customer_id Your Digi-Key Customer id. If your account has multiple Customer Ids for different regions, this allows you to select one of them.
    # @return [ProductSubstitutesResponse]
    def substitutions(product_number, x_digikey_client_id, opts = {})
      data, _status_code, _headers = substitutions_with_http_info(product_number, x_digikey_client_id, opts)
      data
    end

    # Retrieve Substitutions for a given product
    # Works best with a Digi-Key Product number. Some manufacturer product numbers conflict with unrelated products and  may not  return the correct product.  Locale information is required in the headers for accurate pricing and currencies. Locale defaults to United  States.
    # @param product_number 
    # @param x_digikey_client_id The CliendId for your app.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :includes 
    # @option opts [String] :authorization OAuth Bearer Token. Please see&lt;a href&#x3D; \&quot;https://developer.digikey.com/documentation/oauth\&quot; target&#x3D; \&quot;_blank\&quot; &gt; OAuth 2.0 Documentation &lt;/a &gt; page for more info.
    # @option opts [String] :x_digikey_locale_language Two letter code for language to search on. Langauge must be supported by the selected site. If searching on keyword, this language is used to find matches. Acceptable values include: en, ja, de, fr, ko, zhs, zht, it, es, he, nl, sv, pl, fi, da, no. Default value: en
    # @option opts [String] :x_digikey_locale_currency Three letter code for Currency to return part pricing for. Currency must be supported by the selected site. Acceptable values include: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP. Default value: primary currency for the entered Locale-site.
    # @option opts [String] :x_digikey_locale_site Two letter code for Digi-Key product website to search on. Different countries sites have different part restrictions, supported languages, and currencies. Acceptable values include: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH. Default value: US
    # @option opts [String] :x_digikey_customer_id Your Digi-Key Customer id. If your account has multiple Customer Ids for different regions, this allows you to select one of them.
    # @return [Array<(ProductSubstitutesResponse, Fixnum, Hash)>] ProductSubstitutesResponse data, response status code and response headers
    def substitutions_with_http_info(product_number, x_digikey_client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ProductSearchApi.substitutions ...'
      end
      # verify the required parameter 'product_number' is set
      if @api_client.config.client_side_validation && product_number.nil?
        fail ArgumentError, "Missing the required parameter 'product_number' when calling ProductSearchApi.substitutions"
      end
      # verify the required parameter 'x_digikey_client_id' is set
      if @api_client.config.client_side_validation && x_digikey_client_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_digikey_client_id' when calling ProductSearchApi.substitutions"
      end
      # resource path
      local_var_path = '/search/{productNumber}/substitutions'.sub('{' + 'productNumber' + '}', product_number.to_s)

      # query parameters
      query_params = {}
      query_params[:'includes'] = opts[:'includes'] if !opts[:'includes'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-DIGIKEY-Client-Id'] = x_digikey_client_id
      header_params[:'Authorization'] = opts[:'authorization'] if !opts[:'authorization'].nil?
      header_params[:'X-DIGIKEY-Locale-Language'] = opts[:'x_digikey_locale_language'] if !opts[:'x_digikey_locale_language'].nil?
      header_params[:'X-DIGIKEY-Locale-Currency'] = opts[:'x_digikey_locale_currency'] if !opts[:'x_digikey_locale_currency'].nil?
      header_params[:'X-DIGIKEY-Locale-Site'] = opts[:'x_digikey_locale_site'] if !opts[:'x_digikey_locale_site'].nil?
      header_params[:'X-DIGIKEY-Customer-Id'] = opts[:'x_digikey_customer_id'] if !opts[:'x_digikey_customer_id'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKeySecurity', 'oauth2ApplicationSecurity']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ProductSubstitutesResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProductSearchApi#substitutions\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
