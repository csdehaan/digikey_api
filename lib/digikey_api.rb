=begin
#ProductSearch Api

#ProductSearch Api

OpenAPI spec version: v4
Contact: dl_Agile_Team_B2B_API@digikey.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.43

=end

# Common files
require 'digikey_api/api_client'
require 'digikey_api/api_error'
require 'digikey_api/version'
require 'digikey_api/configuration'
require 'digikey_api/token'

# Models
require 'digikey_api/models/alternate_packaging'
require 'digikey_api/models/alternate_packaging_response'
require 'digikey_api/models/base_filter_v4'
require 'digikey_api/models/base_product'
require 'digikey_api/models/categories_response'
require 'digikey_api/models/category'
require 'digikey_api/models/category_node'
require 'digikey_api/models/category_response'
require 'digikey_api/models/category_type'
require 'digikey_api/models/classifications'
require 'digikey_api/models/dk_problem_details'
require 'digikey_api/models/description'
require 'digikey_api/models/digi_reel_pricing'
require 'digikey_api/models/filter_id'
require 'digikey_api/models/filter_options'
require 'digikey_api/models/filter_options_request'
require 'digikey_api/models/filter_value'
require 'digikey_api/models/filters'
require 'digikey_api/models/iso_search_locale'
require 'digikey_api/models/keyword_request'
require 'digikey_api/models/keyword_response'
require 'digikey_api/models/manufacturer'
require 'digikey_api/models/manufacturer_info'
require 'digikey_api/models/manufacturers_response'
require 'digikey_api/models/media_links'
require 'digikey_api/models/media_response'
require 'digikey_api/models/package_type'
require 'digikey_api/models/package_type_by_quantity_product'
require 'digikey_api/models/package_type_by_quantity_response'
require 'digikey_api/models/parameter'
require 'digikey_api/models/parameter_filter_options_response'
require 'digikey_api/models/parameter_filter_request'
require 'digikey_api/models/parameter_value'
require 'digikey_api/models/parametric_category'
require 'digikey_api/models/price_break'
require 'digikey_api/models/product'
require 'digikey_api/models/product_associations'
require 'digikey_api/models/product_associations_response'
require 'digikey_api/models/product_details'
require 'digikey_api/models/product_pricing'
require 'digikey_api/models/product_pricing_response'
require 'digikey_api/models/product_pricing_variation'
require 'digikey_api/models/product_status_v4'
require 'digikey_api/models/product_substitute'
require 'digikey_api/models/product_substitutes_response'
require 'digikey_api/models/product_summary'
require 'digikey_api/models/product_variation'
require 'digikey_api/models/recommendation'
require 'digikey_api/models/recommended_product'
require 'digikey_api/models/recommended_products_response'
require 'digikey_api/models/series'
require 'digikey_api/models/settings_used'
require 'digikey_api/models/sort_options'
require 'digikey_api/models/supplier'
require 'digikey_api/models/top_category'
require 'digikey_api/models/top_category_node'

# APIs
require 'digikey_api/api/product_search_api'

module DigiKey
  class << self
    # Customize default settings for the SDK using block.
    #   DigiKey.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
